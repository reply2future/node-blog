extends layout
block append link
	link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/tui-editor/1.4.6/tui-editor.min.css')
	link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/tui-editor/1.4.6/tui-editor-contents.min.css')
	link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.48.4/codemirror.css')
	link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/github.min.css')
block page
	- var menu = 'post'
block content
	if(!title)
		h2 Post an article
	else
		h2 Edit an article
	.col-md-12
		form#article-form(role='form', action=!title?'/articles':'/api/articles/' + id, method=!title?'POST':'PUT')
			.form-group
				label(for='title') Title
				input#title.form-control(name='title' type='text' placeholder='Javascript is good', value=title)
			.form-group
				label(for='slug') Slug
				input#slug.form-control(name='slug' type='text' placeholder='js-good', value=slug)
				span.help-block This string will be used in the URL.
			.form-group
				label(for='tags') Tags
				input#tags.form-control(name='tags' type='text' placeholder='js', value=tags?tags.join(','):'')
				span.help-block This string will be used in the Category,and seperate with comma(,).
			.form-group
				label(for='text') Text
				#editor(value=`${text}`)
			.alert.d-none(role='alert')
				strong#msg
			p
				button.btn.btn-primary(type='submit') Save 

block append script
	script(src='https://cdnjs.cloudflare.com/ajax/libs/tui-editor/1.4.6/tui-editor-Editor-full.min.js')
	script.
		var editor = new tui.Editor({
			el: document.querySelector('#editor'),
			previewStyle: 'vertical',
			height: '500px',
			initialEditType: 'markdown',
			exts: [{
					name: 'chart',
					minWidth: 100,
					maxWidth: 600,
					minHeight: 100,
					maxHeight: 300
				},
				'scrollSync',
				'colorSyntax',
				'uml',
				'mark',
				'table'
			]
		});

		var $msgView = $('#msg');

		// Get text object if it have
		var rawText = $('#editor').attr('value');
		if(rawText){
			editor.setMarkdown(rawText);
		}

		$('#article-form').submit(function(event){
			// stop form from  submitting normally
			event.preventDefault();

			// get values
			var $form = $(this),
				formUrl = $form.attr('action'),
				formMethod = $form.attr('method'),
				titleValue = $form.find('input[name=title]').val(),
				slugValue = $form.find('input[name=slug]').val(),
				tagsValue = $form.find('input[name=tags]').val().split(','),
				alertView = $form.find('.alert');

			var sendData = {
				title: titleValue,
				slug: slugValue,
				tags: tagsValue,
				text: editor.getMarkdown(),
				lastModified: (new Date()).toISOString()
			};

			$.ajax({
				url: formUrl,
				type: formMethod,
				data: JSON.stringify(sendData), 
				contentType: 'application/json; charset=utf-8',
				dataType: 'json',
			}).done(function(doneData, doneStatus, doneXHR){
				if((doneXHR.status == 201 && formMethod == 'POST') ||
					(doneXHR.status == 200 && formMethod == 'PUT')){
					// create successfully
					alertView.addClass('alert-success');
				} else {
					alertView.addClass('alert-warning');
				}
				$msgView.text(doneData.message);
			}).fail(function(failXHR, failStatus, errorThrow){
				alertView.addClass('alert-danger');
				$msgView.text(errorThrow);
			}).always(function(){
				alertView.removeClass('d-none');
				alertView.alert();
			});
		});
