name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  code-review:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [ '12', '14', '16' ]
    name: Node ${{ matrix.node }} code-review
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - run: npm install
      - run: npx standard  

  unit-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [ '12', '14', '16' ]
    name: Node ${{ matrix.node }} unit-test
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - run: npm install
      - run: npm test
      
  build:
    if: github.event_name == 'push' 
    runs-on: ubuntu-latest

    name: Build image and pull to dockerhub
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: feimeizhan/node-blog:${{ github.sha }}

  deploy:
    if: github.event_name == 'push' 
    runs-on: ubuntu-latest

    name: Deploy the service to remote
    steps:
      - uses: actions/checkout@master
      - name: Generate the docker-compose.yml
        uses: danielr1996/envsubst-action@1.1.0
        env:
          IMAGE_NAME: feimeizhan/node-blog:${{ github.sha }}
          ADMIN_PWD: ${{ secrets.ADMIN_PWD }}
          ADMIN_USER: ${{ secrets.ADMIN_USER }}
          COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          MAIL_HOST: ${{ secrets.MAIL_HOST }}
          MAIL_PASS: ${{ secrets.MAIL_PASS }}
          MAIL_TO: ${{ secrets.MAIL_TO }}
          MAIL_USER: ${{ secrets.MAIL_USER }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          DB_PATH: ${{ secrets.DB_PATH }}
        with:
          input: docker-compose.yml.template
          output: docker-compose.yml
      - name: Copy docker-compose.yml via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USERNAME }}
          port: ${{ secrets.REMOTE_PORT }}
          key: ${{ secrets.REMOTE_PRV_KEY }}
          source: "docker-compose.yml"
          target: ${{ secrets.REMOTE_DEPLOY_PATH }}
